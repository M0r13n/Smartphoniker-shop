# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Testing on ${{ matrix.os }} with Python version ${{ matrix.python }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie
    
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    # Test on Python 3.8 and ubuntu
    strategy:
      fail-fast: false
      matrix:
        python: ['3.8']
        os: ['ubuntu-latest']

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs the tests
      - name: Setup python
        uses: actions/setup-python@v1
        with:
            python-version: ${{ matrix.python }}
            architecture: x64

      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run tests with coverage and create report as xml file
        run: python manage.py cov
        env: 
          DATABASE_TEST_URL: postgresql://postgres:postgres@postgres

      - name: Run Flake8
        run: flake8 project
